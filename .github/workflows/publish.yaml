---
name: publish
on:
  push:
    branches-ignore:
      - '*'
    tags:
      - 'v[0-9]*'
  workflow_dispatch:
    inputs:
      version:
        description: "Version to be published (e.g., v1.38.0, v1.38.0-1)"
        required: true
        type: string
        default: "latest"

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Get image tags
        id: image_tags
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            # For workflow_dispatch, use only the version provided
            VERSION=${{ github.event.inputs.version }}
            RELEASE=${{ github.event.inputs.version }}
            IMAGE_TAGS=(
              "${{ vars.IMAGE_REGISTRY }}/${{ vars.IMAGE_REPOSITORY }}/${{ vars.IMAGE_NAME }}:${VERSION}"
            )
          else
            # For tag events, use semantic versioning tags
            # GITHUB_REF will be of the form "refs/tags/v0.1.2" or "refs/tags/v0.1.2-1"
            # To determine VERSION, strip off the leading "refs/tags/"
            VERSION=${GITHUB_REF#refs/tags/}
            IMAGE_TAGS=(
              "${{ vars.IMAGE_REGISTRY }}/${{ vars.IMAGE_REPOSITORY }}/${{ vars.IMAGE_NAME }}:latest"
              "${{ vars.IMAGE_REGISTRY }}/${{ vars.IMAGE_REPOSITORY }}/${{ vars.IMAGE_NAME }}:${VERSION%.*}"
              "${{ vars.IMAGE_REGISTRY }}/${{ vars.IMAGE_REPOSITORY }}/${{ vars.IMAGE_NAME }}:${VERSION}"
            )
          fi

          # Set IMAGE_TAGS output for use in next step
          echo "IMAGE_TAGS=${IMAGE_TAGS[*]}" >> $GITHUB_OUTPUT


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: steps.image_tags.outputs.IMAGE_TAGS
        with:
          version: latest

      - name: Login to Image Registry
        uses: docker/login-action@v3
        if: steps.image_tags.outputs.IMAGE_TAGS
        with:
          registry: ${{ vars.IMAGE_REGISTRY }}/${{ vars.IMAGE_REPOSITORY }}
          username: ${{ secrets.IMAGE_REGISTRY_USERNAME }}
          password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}

      - name: Build and push
        if: steps.image_tags.outputs.IMAGE_TAGS
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.image_tags.outputs.IMAGE_TAGS }}
          cache-from: type=gha,scope=${{ vars.IMAGE_NAME }}
          cache-to: type=gha,mode=max,scope=${{ vars.IMAGE_NAME }}
